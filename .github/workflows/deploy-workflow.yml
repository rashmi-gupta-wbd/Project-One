name: Deploy workflow
#we waht to get dynamic name to be written with each run, hence we write it as such 
run-name: Deploy ${{ inputs.deploy_job }} from ${{ inputs.project }}



on:
#since we do not want it to be triggered on push 
# Trigger on deployment
  # push:
  #   branches:
  #     - main  # Make sure your push is going to `main`

  #after writing the below code and runnning it, we then commeneted it
  #before commenting we were getting the workflow being run for all the pushes to all the branches
  #next we commented out, so for all the branches that are newly created afterthis, we are getting the workflow for all of them
  #push:
   # branches:
     # - '*'  

 #we want the options to be given to the user, while he wants to run the workflow
  workflow_dispatch:
    inputs:
      environment:
        description: environment
        default: env1
        required: true
        type: choice
        options:
          - env1
          - env2
          - env3
          - env4
          - env5
          - env6
          - env7
          - env8
          - env9
          - env10
      project:
        description: the project directory containing the job
        required: true
      deploy_job:
        description: job name
        required : true


  deployment_status:
    types: [success]

jobs:

  deploy:
    runs-on: macos-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy
        run: |
          echo "Deploying the job: ${{ inputs.deploy_job }} from project: ${{ inputs.project }}"
      # Set outputs for the deploy_job and project
      - name: Set Outputs
        id: set_outputs
        run: |
          echo "deploy_job=${{ inputs.deploy_job }}" >> $GITHUB_ENV
          echo "project=${{ inputs.project }}" >> $GITHUB_ENV
          echo "::set-output name=deploy_job::${{ inputs.deploy_job }}"
          echo "::set-output name=project::${{ inputs.project }}"
          
  print-message:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
      # Print the message
      - name: Print deployment message
        run: |
          echo "this string is printed on deployment"
        shell: bash # By default, bash works across Linux and macOS
        
      
