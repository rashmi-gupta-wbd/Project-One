# defines the name of the workflow
name: Understand Deploy Workflow

# displayed when the workflow is run. the run-name changes dynamically
run-name: Deploy ${{ inputs.deploy_job }} from ${{ inputs.project }} to ${{ inputs.environment }}


on:
  #push:
  #  branches: 
  #  - "*"

  # specifies that the workflow is triggered manually through the GitHub Actions UI
  workflow_dispatch:
    inputs:
      environment:
        description: environment
        default: 'env1'
        required: true
        type: choice
        options:
          - env1
          - env2
          - env3
          - env4
      project:
        description: the project directory containing the job
        required: true
      deploy_job:
        description: job name
        required : true
        
# This section defines the permissions that the workflow requires
permissions:
  id-token: write #allows workflow to create/request identity tokens to authenticate with external services (eg. cloud providers).
  pull-requests: write
  contents: read
  actions: write #Grants the workflow permissions to manage GitHub Actions resources, such as triggering workflows or modifying workflow-related settings.

jobs:
  check_user:
    runs-on: ubuntu-latest
    steps:
      # Ensures the workflow has access to the repository’s code and files so that it can 
      # perform operations like reading or modifying files.
      - name : Checkout Repository
        uses : actions/checkout@v2

      - name: Read USERS file
        id: read_file
        run: |
          echo "USERS=$(jq -c . < USERS.json)" >> $GITHUB_ENV

      - name: Check if user is in list
        id: check
        if: ${{ !contains(fromJson(env.USERS), github.actor) }}
        run: |
          echo "You have no rights to trigger this job."
          exit 1

  deploy:
    needs: check_user
    uses: streaming/workflows/.github/workflows/deploy.yaml@v1.7.0
    with: 
      environment: ${{ inputs.environment }}
      project: ${{ inputs.project }}
      deploy_job: ${{ inputs.deploy_job }}
    secrets: inherit #Makes all the secrets set in the repository’s settings available to the workflow, ensuring secure access to sensitive data
